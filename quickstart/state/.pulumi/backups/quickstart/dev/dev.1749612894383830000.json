{
    "version": 3,
    "checkpoint": {
        "stack": "organization/quickstart/dev",
        "latest": {
            "manifest": {
                "time": "2025-06-11T11:34:54.294836+08:00",
                "magic": "aca397c5c01e73e6cdf70d6d6782bbc85035e91382bf09bf47b318e145d08d2e",
                "version": "v3.174.0"
            },
            "secrets_providers": {
                "type": "passphrase",
                "state": {
                    "salt": "v1:0R3yQeR+DN4=:v1:unEKEir4Sxe9nxZx:qQtrROZTEwgBq69oPbOaSmy63o3AYA=="
                }
            },
            "resources": [
                {
                    "urn": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "custom": false,
                    "type": "pulumi:pulumi:Stack",
                    "created": "2025-06-11T03:24:41.2283Z",
                    "modified": "2025-06-11T03:24:41.2283Z",
                    "sourcePosition": "project:///.venv/lib/python3.13/site-packages/pulumi/runtime/stack.py#140"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0",
                    "custom": true,
                    "id": "4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "type": "pulumi:providers:kubernetes",
                    "inputs": {
                        "__internal": {},
                        "version": "4.23.0"
                    },
                    "outputs": {
                        "version": "4.23.0"
                    },
                    "created": "2025-06-11T03:24:41.539269Z",
                    "modified": "2025-06-11T03:24:41.539269Z"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::ingress-nginx",
                    "custom": true,
                    "id": "ingress-nginx",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "name": "ingress-nginx"
                        }
                    },
                    "outputs": {
                        "__fieldManager": "pulumi-kubernetes-00e03c0f",
                        "__initialApiVersion": "v1",
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "ingress-nginx"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2025-06-11T03:24:41Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "ingress-nginx"
                            },
                            "name": "ingress-nginx",
                            "resourceVersion": "485",
                            "uid": "aa5b977c-b084-4f62-947e-ba8ea3394bdb"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "apiVersion": [],
                        "kind": [],
                        "metadata": []
                    },
                    "additionalSecretOutputs": [
                        "metadata.name"
                    ],
                    "created": "2025-06-11T03:24:41.735141Z",
                    "modified": "2025-06-11T03:24:41.735141Z",
                    "sourcePosition": "project:///components/base_component.py#42"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::cert-manager",
                    "custom": true,
                    "id": "cert-manager",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "name": "cert-manager"
                        }
                    },
                    "outputs": {
                        "__fieldManager": "pulumi-kubernetes-a3fdbd80",
                        "__initialApiVersion": "v1",
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "cert-manager"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2025-06-11T03:24:41Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "cert-manager"
                            },
                            "name": "cert-manager",
                            "resourceVersion": "487",
                            "uid": "12a72c5e-ad5f-4363-952d-a4ee34d14eab"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "apiVersion": [],
                        "kind": [],
                        "metadata": []
                    },
                    "additionalSecretOutputs": [
                        "metadata.name"
                    ],
                    "created": "2025-06-11T03:24:41.738913Z",
                    "modified": "2025-06-11T03:24:41.738913Z",
                    "sourcePosition": "project:///components/base_component.py#42"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::nginx",
                    "custom": true,
                    "id": "nginx",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "name": "nginx"
                        }
                    },
                    "outputs": {
                        "__fieldManager": "pulumi-kubernetes-d5dcaf68",
                        "__initialApiVersion": "v1",
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "nginx"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2025-06-11T03:24:41Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "nginx"
                            },
                            "name": "nginx",
                            "resourceVersion": "486",
                            "uid": "8be7d6e7-9bd2-401a-90ac-2ddc12e0d1b8"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "apiVersion": [],
                        "kind": [],
                        "metadata": []
                    },
                    "additionalSecretOutputs": [
                        "metadata.name"
                    ],
                    "created": "2025-06-11T03:24:41.756096Z",
                    "modified": "2025-06-11T03:24:41.756096Z",
                    "sourcePosition": "project:///components/base_component.py#42"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::cattle-system",
                    "custom": true,
                    "id": "cattle-system",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "name": "cattle-system"
                        }
                    },
                    "outputs": {
                        "__fieldManager": "pulumi-kubernetes-b46c583b",
                        "__initialApiVersion": "v1",
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "cattle-system"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2025-06-11T03:24:41Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "cattle-system"
                            },
                            "name": "cattle-system",
                            "resourceVersion": "484",
                            "uid": "a54139cb-76e5-4fb6-89cc-f3826c02c582"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "apiVersion": [],
                        "kind": [],
                        "metadata": []
                    },
                    "additionalSecretOutputs": [
                        "metadata.name"
                    ],
                    "created": "2025-06-11T03:24:41.756076Z",
                    "modified": "2025-06-11T03:24:41.756076Z",
                    "sourcePosition": "project:///components/base_component.py#42"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:apps/v1:Deployment::nginx",
                    "custom": true,
                    "id": "nginx/nginx-db85cd1a",
                    "type": "kubernetes:apps/v1:Deployment",
                    "inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "name": "nginx-db85cd1a",
                            "namespace": "nginx"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "nginx"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "app": "nginx"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "image": "nginx:latest",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/",
                                                    "port": 80
                                                },
                                                "initialDelaySeconds": 30,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "nginx",
                                            "ports": [
                                                {
                                                    "containerPort": 80
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/",
                                                    "port": 80
                                                },
                                                "initialDelaySeconds": 5,
                                                "timeoutSeconds": 5
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "200m",
                                                    "memory": "256Mi"
                                                },
                                                "requests": {
                                                    "cpu": "100m",
                                                    "memory": "128Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "restartPolicy": "Always"
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__fieldManager": "pulumi-kubernetes-d0edd4d0",
                        "__initialApiVersion": "apps/v1",
                        "__inputs": {
                            "apiVersion": "apps/v1",
                            "kind": "Deployment",
                            "metadata": {
                                "annotations": {
                                    "pulumi.com/autonamed": "true"
                                },
                                "name": "nginx-db85cd1a",
                                "namespace": "nginx"
                            },
                            "spec": {
                                "replicas": 1,
                                "selector": {
                                    "matchLabels": {
                                        "app": "nginx"
                                    }
                                },
                                "template": {
                                    "metadata": {
                                        "labels": {
                                            "app": "nginx"
                                        }
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "image": "nginx:latest",
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/",
                                                        "port": 80
                                                    },
                                                    "initialDelaySeconds": 30,
                                                    "timeoutSeconds": 5
                                                },
                                                "name": "nginx",
                                                "ports": [
                                                    {
                                                        "containerPort": 80
                                                    }
                                                ],
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/",
                                                        "port": 80
                                                    },
                                                    "initialDelaySeconds": 5,
                                                    "timeoutSeconds": 5
                                                },
                                                "resources": {
                                                    "limits": {
                                                        "cpu": "200m",
                                                        "memory": "256Mi"
                                                    },
                                                    "requests": {
                                                        "cpu": "100m",
                                                        "memory": "128Mi"
                                                    }
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always"
                                    }
                                }
                            }
                        },
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "deployment.kubernetes.io/revision": "1",
                                "pulumi.com/autonamed": "true"
                            },
                            "creationTimestamp": "2025-06-11T03:24:46Z",
                            "generation": 1,
                            "managedFields": [
                                {
                                    "apiVersion": "apps/v1",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                "f:pulumi.com/autonamed": {}
                                            }
                                        },
                                        "f:spec": {
                                            "f:replicas": {},
                                            "f:selector": {},
                                            "f:template": {
                                                "f:metadata": {
                                                    "f:labels": {
                                                        "f:app": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:containers": {
                                                        "k:{\"name\":\"nginx\"}": {
                                                            ".": {},
                                                            "f:image": {},
                                                            "f:livenessProbe": {
                                                                "f:httpGet": {
                                                                    "f:path": {},
                                                                    "f:port": {}
                                                                },
                                                                "f:initialDelaySeconds": {},
                                                                "f:timeoutSeconds": {}
                                                            },
                                                            "f:name": {},
                                                            "f:ports": {
                                                                "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                    ".": {},
                                                                    "f:containerPort": {}
                                                                }
                                                            },
                                                            "f:readinessProbe": {
                                                                "f:httpGet": {
                                                                    "f:path": {},
                                                                    "f:port": {}
                                                                },
                                                                "f:initialDelaySeconds": {},
                                                                "f:timeoutSeconds": {}
                                                            },
                                                            "f:resources": {
                                                                "f:limits": {
                                                                    "f:cpu": {},
                                                                    "f:memory": {}
                                                                },
                                                                "f:requests": {
                                                                    "f:cpu": {},
                                                                    "f:memory": {}
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "f:restartPolicy": {}
                                                }
                                            }
                                        }
                                    },
                                    "manager": "pulumi-kubernetes-d0edd4d0",
                                    "operation": "Apply",
                                    "time": "2025-06-11T03:24:46Z"
                                },
                                {
                                    "apiVersion": "apps/v1",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                "f:deployment.kubernetes.io/revision": {}
                                            }
                                        },
                                        "f:status": {
                                            "f:availableReplicas": {},
                                            "f:conditions": {
                                                ".": {},
                                                "k:{\"type\":\"Available\"}": {
                                                    ".": {},
                                                    "f:lastTransitionTime": {},
                                                    "f:lastUpdateTime": {},
                                                    "f:message": {},
                                                    "f:reason": {},
                                                    "f:status": {},
                                                    "f:type": {}
                                                },
                                                "k:{\"type\":\"Progressing\"}": {
                                                    ".": {},
                                                    "f:lastTransitionTime": {},
                                                    "f:lastUpdateTime": {},
                                                    "f:message": {},
                                                    "f:reason": {},
                                                    "f:status": {},
                                                    "f:type": {}
                                                }
                                            },
                                            "f:observedGeneration": {},
                                            "f:readyReplicas": {},
                                            "f:replicas": {},
                                            "f:updatedReplicas": {}
                                        }
                                    },
                                    "manager": "k3s",
                                    "operation": "Update",
                                    "subresource": "status",
                                    "time": "2025-06-11T03:25:11Z"
                                }
                            ],
                            "name": "nginx-db85cd1a",
                            "namespace": "nginx",
                            "resourceVersion": "823",
                            "uid": "6c9acb63-9401-47b0-953d-8a4d0c0ac7ca"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 1,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "app": "nginx"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": "25%",
                                    "maxUnavailable": "25%"
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "app": "nginx"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "image": "nginx:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/",
                                                    "port": 80,
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "nginx",
                                            "ports": [
                                                {
                                                    "containerPort": 80,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/",
                                                    "port": 80,
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 5,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 5
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "200m",
                                                    "memory": "256Mi"
                                                },
                                                "requests": {
                                                    "cpu": "100m",
                                                    "memory": "128Mi"
                                                }
                                            },
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30
                                }
                            }
                        },
                        "status": {
                            "availableReplicas": 1,
                            "conditions": [
                                {
                                    "lastTransitionTime": "2025-06-11T03:25:11Z",
                                    "lastUpdateTime": "2025-06-11T03:25:11Z",
                                    "message": "Deployment has minimum availability.",
                                    "reason": "MinimumReplicasAvailable",
                                    "status": "True",
                                    "type": "Available"
                                },
                                {
                                    "lastTransitionTime": "2025-06-11T03:24:46Z",
                                    "lastUpdateTime": "2025-06-11T03:25:11Z",
                                    "message": "ReplicaSet \"nginx-db85cd1a-59bf4f87c7\" has successfully progressed.",
                                    "reason": "NewReplicaSetAvailable",
                                    "status": "True",
                                    "type": "Progressing"
                                }
                            ],
                            "observedGeneration": 1,
                            "readyReplicas": 1,
                            "replicas": 1,
                            "updatedReplicas": 1
                        }
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "dependencies": [
                        "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::nginx"
                    ],
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "apiVersion": [],
                        "kind": [],
                        "metadata": [
                            "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::nginx"
                        ],
                        "spec": []
                    },
                    "created": "2025-06-11T03:25:11.222703Z",
                    "modified": "2025-06-11T03:25:11.222703Z",
                    "sourcePosition": "project:///components/nginx.py#37"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:helm.sh/v3:Release::cert-manager",
                    "custom": true,
                    "id": "cert-manager/cert-manager-058b9ad2",
                    "type": "kubernetes:helm.sh/v3:Release",
                    "inputs": {
                        "allowNullValues": false,
                        "atomic": false,
                        "chart": "cert-manager",
                        "cleanupOnFail": false,
                        "createNamespace": true,
                        "dependencyUpdate": false,
                        "description": "",
                        "devel": false,
                        "disableCRDHooks": false,
                        "disableOpenapiValidation": false,
                        "disableWebhooks": false,
                        "forceUpdate": false,
                        "keyring": "",
                        "lint": false,
                        "name": "cert-manager-058b9ad2",
                        "namespace": "cert-manager",
                        "postrender": "",
                        "recreatePods": false,
                        "renderSubchartNotes": false,
                        "replace": false,
                        "repositoryOpts": {
                            "caFile": "",
                            "certFile": "",
                            "keyFile": "",
                            "password": "",
                            "repo": "https://charts.jetstack.io",
                            "username": ""
                        },
                        "resetValues": false,
                        "reuseValues": false,
                        "skipAwait": false,
                        "skipCrds": false,
                        "timeout": 300,
                        "values": {
                            "installCRDs": true
                        },
                        "verify": false,
                        "version": "v1.17.2",
                        "waitForJobs": false
                    },
                    "outputs": {
                        "__inputs": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:hKvQZQr/EGkaj0gQ:T7AO20wng1JOUyrCYse33cL3HksIo5wVGmMVG6gtP4MLaa/jhLtAqMaW2Z3DmfL6rUgGRKxOG2UBd+yNkRmbQDT6zq4rMpfwn8yqeuWay7sin1wacN09A6uRQ/E6m1INy1eoiajwWUOQNW0vMZtTxOzebCOTjvy/mXAqz0GMPHyLYD+cEfIYa9lTV4xCHEvJIXYoWoJo2ZydoQKE5itOWMLHKOaJAWGRtikAWnmVT7WMcC11DJea1VqCIMcnxZmYhL6Ie3Tf+XFuCSklr4GuWhOoAibR0idRhfDzd2n48DJ9ZdQCjlKCKV4WLjSaH8GMgCpuEtnPcOX2nBJgBV7juJwJLdhKOhz8zR4KROVr82pN7GVGjGDJNyLGzNGSxyFlCA7GkoNYh8gPfYu6nQIcQTkagQobqpvZUcXalINPuPlAvn5v1p+3/NXqEVH9u/1HP9B1t4azYwzztMfZUB5E0QXX5avDphhYwOIJ47sEaz+AUDy8VnuZ4QedbXVhH9bGsadHdhzor5+GXBwqzwHEA1WPmQk/B1fvxycFgxoMRWaGNuDNFYj0emkroQJh8mJs+Ykoo4POnuJidTLr2nWKGDIX48S6+eM45f9nhFdfR556vTN4xBoWnz0IjTEYAk2jTrEHegyiWHRZ2Kn+Vkmu4Qms9pgJSa/StmO2NSHzb8roeRqO5ljLbMSdgqYmPg0s0ovaHRFlfCS/dZUKWu/a5J8ra+s9oo/RwwRdQNuEJGCLGNZy50NJx5AfEdqOf7wJ8kNvmQwIUGyD8fU+bELO4iWjjq2Y5sQOdqtKs3sI7loKOwCjfrkg0thJat6DpUkAmq92m6btBYIQoD6J1kcpwG2FjlpgGCzXKRSxuOlhDddKur8AWcPIAyvUiPndsT/T5mnXqyx7Xi+MxRCBRIQwvHQMz2ZgLmh5xP9ug2gWCvVj+rLyNVL4ImaN7FTCFWBwZcQfcMe5qG/ns+Cs+wuGI2S9W2/a+A=="
                        },
                        "allowNullValues": false,
                        "atomic": false,
                        "chart": "cert-manager",
                        "cleanupOnFail": false,
                        "createNamespace": true,
                        "dependencyUpdate": false,
                        "description": "",
                        "devel": false,
                        "disableCRDHooks": false,
                        "disableOpenapiValidation": false,
                        "disableWebhooks": false,
                        "forceUpdate": false,
                        "keyring": "",
                        "lint": false,
                        "name": "cert-manager-058b9ad2",
                        "namespace": "cert-manager",
                        "postrender": "",
                        "recreatePods": false,
                        "renderSubchartNotes": false,
                        "replace": false,
                        "repositoryOpts": {
                            "caFile": "",
                            "certFile": "",
                            "keyFile": "",
                            "password": "",
                            "repo": "https://charts.jetstack.io",
                            "username": ""
                        },
                        "resetValues": false,
                        "resourceNames": {
                            "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "cert-manager-058b9ad2-cainjector",
                                "cert-manager-058b9ad2-cluster-view",
                                "cert-manager-058b9ad2-controller-approve:cert-manager-io",
                                "cert-manager-058b9ad2-controller-certificates",
                                "cert-manager-058b9ad2-controller-certificatesigningrequests",
                                "cert-manager-058b9ad2-controller-challenges",
                                "cert-manager-058b9ad2-controller-clusterissuers",
                                "cert-manager-058b9ad2-controller-ingress-shim",
                                "cert-manager-058b9ad2-controller-issuers",
                                "cert-manager-058b9ad2-controller-orders",
                                "cert-manager-058b9ad2-edit",
                                "cert-manager-058b9ad2-view",
                                "cert-manager-058b9ad2-webhook:subjectaccessreviews"
                            ],
                            "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "cert-manager-058b9ad2-cainjector",
                                "cert-manager-058b9ad2-controller-approve:cert-manager-io",
                                "cert-manager-058b9ad2-controller-certificates",
                                "cert-manager-058b9ad2-controller-certificatesigningrequests",
                                "cert-manager-058b9ad2-controller-challenges",
                                "cert-manager-058b9ad2-controller-clusterissuers",
                                "cert-manager-058b9ad2-controller-ingress-shim",
                                "cert-manager-058b9ad2-controller-issuers",
                                "cert-manager-058b9ad2-controller-orders",
                                "cert-manager-058b9ad2-webhook:subjectaccessreviews"
                            ],
                            "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                                "certificaterequests.cert-manager.io",
                                "certificates.cert-manager.io",
                                "challenges.acme.cert-manager.io",
                                "clusterissuers.cert-manager.io",
                                "issuers.cert-manager.io",
                                "orders.acme.cert-manager.io"
                            ],
                            "Deployment.apps/apps/v1": [
                                "cert-manager/cert-manager-058b9ad2",
                                "cert-manager/cert-manager-058b9ad2-cainjector",
                                "cert-manager/cert-manager-058b9ad2-webhook"
                            ],
                            "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                                "cert-manager-058b9ad2-webhook"
                            ],
                            "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "cert-manager/cert-manager-058b9ad2-tokenrequest",
                                "cert-manager/cert-manager-058b9ad2-webhook:dynamic-serving",
                                "kube-system/cert-manager-058b9ad2-cainjector:leaderelection",
                                "kube-system/cert-manager-058b9ad2:leaderelection"
                            ],
                            "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "cert-manager/cert-manager-058b9ad2-cert-manager-058b9ad2-tokenrequest",
                                "cert-manager/cert-manager-058b9ad2-webhook:dynamic-serving",
                                "kube-system/cert-manager-058b9ad2-cainjector:leaderelection",
                                "kube-system/cert-manager-058b9ad2:leaderelection"
                            ],
                            "Service/v1": [
                                "cert-manager/cert-manager-058b9ad2",
                                "cert-manager/cert-manager-058b9ad2-cainjector",
                                "cert-manager/cert-manager-058b9ad2-webhook"
                            ],
                            "ServiceAccount/v1": [
                                "cert-manager/cert-manager-058b9ad2",
                                "cert-manager/cert-manager-058b9ad2-cainjector",
                                "cert-manager/cert-manager-058b9ad2-webhook"
                            ],
                            "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                                "cert-manager-058b9ad2-webhook"
                            ]
                        },
                        "reuseValues": false,
                        "skipAwait": false,
                        "skipCrds": false,
                        "status": {
                            "appVersion": "v1.17.2",
                            "chart": "cert-manager",
                            "name": "cert-manager-058b9ad2",
                            "namespace": "cert-manager",
                            "revision": 1,
                            "status": "deployed",
                            "version": "v1.17.2"
                        },
                        "timeout": 300,
                        "values": {
                            "installCRDs": true
                        },
                        "verify": false,
                        "version": "v1.17.2",
                        "waitForJobs": false
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "dependencies": [
                        "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::cert-manager"
                    ],
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "chart": [],
                        "compat": [],
                        "createNamespace": [],
                        "namespace": [
                            "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::cert-manager"
                        ],
                        "repositoryOpts": [],
                        "values": [],
                        "version": []
                    },
                    "created": "2025-06-11T03:25:13.087946Z",
                    "modified": "2025-06-11T03:25:13.087946Z",
                    "sourcePosition": "project:///components/cert_manager.py#43"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:helm.sh/v3:Release::ingress-nginx",
                    "custom": true,
                    "id": "ingress-nginx/ingress-nginx-c0b6f2c3",
                    "type": "kubernetes:helm.sh/v3:Release",
                    "inputs": {
                        "allowNullValues": false,
                        "atomic": false,
                        "chart": "ingress-nginx",
                        "cleanupOnFail": false,
                        "createNamespace": false,
                        "dependencyUpdate": false,
                        "description": "",
                        "devel": false,
                        "disableCRDHooks": false,
                        "disableOpenapiValidation": false,
                        "disableWebhooks": false,
                        "forceUpdate": false,
                        "keyring": "",
                        "lint": false,
                        "name": "ingress-nginx-c0b6f2c3",
                        "namespace": "ingress-nginx",
                        "postrender": "",
                        "recreatePods": false,
                        "renderSubchartNotes": false,
                        "replace": false,
                        "repositoryOpts": {
                            "caFile": "",
                            "certFile": "",
                            "keyFile": "",
                            "password": "",
                            "repo": "https://kubernetes.github.io/ingress-nginx",
                            "username": ""
                        },
                        "resetValues": false,
                        "reuseValues": false,
                        "skipAwait": false,
                        "skipCrds": false,
                        "timeout": 600,
                        "values": {
                            "controller": {
                                "admissionWebhooks": {
                                    "enabled": true,
                                    "patch": {
                                        "enabled": true,
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "100Mi"
                                            },
                                            "requests": {
                                                "cpu": "50m",
                                                "memory": "50Mi"
                                            }
                                        }
                                    }
                                },
                                "config": {
                                    "client-body-timeout": "60s",
                                    "client-header-timeout": "60s",
                                    "compute-full-forwarded-for": "true",
                                    "enable-real-ip": "true",
                                    "keep-alive": "75",
                                    "keep-alive-requests": "100",
                                    "proxy-body-size": "50m",
                                    "proxy-connect-timeout": "60s",
                                    "proxy-read-timeout": "60s",
                                    "proxy-send-timeout": "60s",
                                    "upstream-keepalive-connections": "100",
                                    "upstream-keepalive-timeout": "60",
                                    "use-forwarded-headers": "true",
                                    "use-proxy-protocol": "false"
                                },
                                "containerSecurityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsGroup": 101,
                                    "runAsNonRoot": true,
                                    "runAsUser": 101
                                },
                                "extraArgs": {
                                    "default-ssl-certificate": "ingress-nginx/tls-secret"
                                },
                                "image": {
                                    "allowPrivilegeEscalation": false
                                },
                                "livenessProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "timeoutSeconds": 2
                                },
                                "metrics": {
                                    "enabled": false,
                                    "serviceMonitor": {
                                        "enabled": false
                                    }
                                },
                                "minReadySeconds": 0,
                                "name": "controller",
                                "podSecurityContext": {
                                    "runAsGroup": 101,
                                    "runAsNonRoot": true,
                                    "runAsUser": 101
                                },
                                "readinessProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                },
                                "replicaCount": 1,
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "256Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "90Mi"
                                    }
                                },
                                "service": {
                                    "enabled": true,
                                    "externalTrafficPolicy": "Local",
                                    "type": "LoadBalancer"
                                },
                                "startupProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                },
                                "terminationGracePeriodSeconds": 30
                            },
                            "defaultBackend": {
                                "enabled": true,
                                "minReadySeconds": 0,
                                "replicaCount": 1,
                                "resources": {
                                    "limits": {
                                        "cpu": "20m",
                                        "memory": "40Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "startupProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                }
                            }
                        },
                        "verify": false,
                        "version": "4.9.1",
                        "waitForJobs": false
                    },
                    "outputs": {
                        "__inputs": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:QYHgb7J975joSaRd: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"
                        },
                        "allowNullValues": false,
                        "atomic": false,
                        "chart": "ingress-nginx",
                        "cleanupOnFail": false,
                        "createNamespace": false,
                        "dependencyUpdate": false,
                        "description": "",
                        "devel": false,
                        "disableCRDHooks": false,
                        "disableOpenapiValidation": false,
                        "disableWebhooks": false,
                        "forceUpdate": false,
                        "keyring": "",
                        "lint": false,
                        "name": "ingress-nginx-c0b6f2c3",
                        "namespace": "ingress-nginx",
                        "postrender": "",
                        "recreatePods": false,
                        "renderSubchartNotes": false,
                        "replace": false,
                        "repositoryOpts": {
                            "caFile": "",
                            "certFile": "",
                            "keyFile": "",
                            "password": "",
                            "repo": "https://kubernetes.github.io/ingress-nginx",
                            "username": ""
                        },
                        "resetValues": false,
                        "resourceNames": {
                            "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "ingress-nginx-c0b6f2c3"
                            ],
                            "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "ingress-nginx-c0b6f2c3"
                            ],
                            "ConfigMap/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3-controller"
                            ],
                            "Deployment.apps/apps/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3-controller",
                                "ingress-nginx/ingress-nginx-c0b6f2c3-defaultbackend"
                            ],
                            "IngressClass.networking.k8s.io/networking.k8s.io/v1": [
                                "nginx"
                            ],
                            "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3"
                            ],
                            "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3"
                            ],
                            "Service/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3-controller",
                                "ingress-nginx/ingress-nginx-c0b6f2c3-controller-admission",
                                "ingress-nginx/ingress-nginx-c0b6f2c3-defaultbackend"
                            ],
                            "ServiceAccount/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3",
                                "ingress-nginx/ingress-nginx-c0b6f2c3-backend"
                            ],
                            "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                                "ingress-nginx-c0b6f2c3-admission"
                            ]
                        },
                        "reuseValues": false,
                        "skipAwait": false,
                        "skipCrds": false,
                        "status": {
                            "appVersion": "1.9.6",
                            "chart": "ingress-nginx",
                            "name": "ingress-nginx-c0b6f2c3",
                            "namespace": "ingress-nginx",
                            "revision": 1,
                            "status": "failed",
                            "version": "4.9.1"
                        },
                        "timeout": 600,
                        "values": {
                            "controller": {
                                "admissionWebhooks": {
                                    "enabled": true,
                                    "patch": {
                                        "enabled": true,
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "100Mi"
                                            },
                                            "requests": {
                                                "cpu": "50m",
                                                "memory": "50Mi"
                                            }
                                        }
                                    }
                                },
                                "config": {
                                    "client-body-timeout": "60s",
                                    "client-header-timeout": "60s",
                                    "compute-full-forwarded-for": "true",
                                    "enable-real-ip": "true",
                                    "keep-alive": "75",
                                    "keep-alive-requests": "100",
                                    "proxy-body-size": "50m",
                                    "proxy-connect-timeout": "60s",
                                    "proxy-read-timeout": "60s",
                                    "proxy-send-timeout": "60s",
                                    "upstream-keepalive-connections": "100",
                                    "upstream-keepalive-timeout": "60",
                                    "use-forwarded-headers": "true",
                                    "use-proxy-protocol": "false"
                                },
                                "containerSecurityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsGroup": 101,
                                    "runAsNonRoot": true,
                                    "runAsUser": 101
                                },
                                "extraArgs": {
                                    "default-ssl-certificate": "ingress-nginx/tls-secret"
                                },
                                "image": {
                                    "allowPrivilegeEscalation": false
                                },
                                "livenessProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "timeoutSeconds": 2
                                },
                                "metrics": {
                                    "enabled": false,
                                    "serviceMonitor": {
                                        "enabled": false
                                    }
                                },
                                "minReadySeconds": 0,
                                "name": "controller",
                                "podSecurityContext": {
                                    "runAsGroup": 101,
                                    "runAsNonRoot": true,
                                    "runAsUser": 101
                                },
                                "readinessProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                },
                                "replicaCount": 1,
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "256Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "90Mi"
                                    }
                                },
                                "service": {
                                    "enabled": true,
                                    "externalTrafficPolicy": "Local",
                                    "type": "LoadBalancer"
                                },
                                "startupProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                },
                                "terminationGracePeriodSeconds": 30
                            },
                            "defaultBackend": {
                                "enabled": true,
                                "minReadySeconds": 0,
                                "replicaCount": 1,
                                "resources": {
                                    "limits": {
                                        "cpu": "20m",
                                        "memory": "40Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "startupProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                }
                            }
                        },
                        "verify": false,
                        "version": "4.9.1",
                        "waitForJobs": false
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "dependencies": [
                        "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::ingress-nginx"
                    ],
                    "initErrors": [
                        "Helm release \"ingress-nginx/ingress-nginx-c0b6f2c3\" was created, but failed to initialize completely. Use Helm CLI to investigate: failed to become available within allocated timeout. Error: Helm Release ingress-nginx/ingress-nginx-c0b6f2c3: context deadline exceeded"
                    ],
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "chart": [],
                        "compat": [],
                        "namespace": [
                            "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::ingress-nginx"
                        ],
                        "repositoryOpts": [],
                        "timeout": [],
                        "values": [],
                        "version": []
                    },
                    "customTimeouts": {
                        "create": 600,
                        "update": 600,
                        "delete": 300
                    },
                    "created": "2025-06-11T03:34:54.286696Z",
                    "modified": "2025-06-11T03:34:54.286696Z",
                    "sourcePosition": "project:///components/ingress.py#207"
                }
            ],
            "metadata": {}
        }
    }
}
