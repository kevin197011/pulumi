{
    "version": 3,
    "checkpoint": {
        "stack": "organization/quickstart/dev",
        "latest": {
            "manifest": {
                "time": "2025-06-11T12:05:24.854517+08:00",
                "magic": "aca397c5c01e73e6cdf70d6d6782bbc85035e91382bf09bf47b318e145d08d2e",
                "version": "v3.174.0"
            },
            "secrets_providers": {
                "type": "passphrase",
                "state": {
                    "salt": "v1:0R3yQeR+DN4=:v1:unEKEir4Sxe9nxZx:qQtrROZTEwgBq69oPbOaSmy63o3AYA=="
                }
            },
            "resources": [
                {
                    "urn": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "custom": false,
                    "type": "pulumi:pulumi:Stack",
                    "outputs": {
                        "cert_manager": {
                            "namespace": "cert-manager",
                            "release_name": "cert-manager-058b9ad2"
                        },
                        "ingress": {
                            "metrics_enabled": false,
                            "namespace": "ingress-nginx",
                            "release_name": "ingress-nginx-c0b6f2c3",
                            "service_type": "LoadBalancer"
                        },
                        "nginx": {
                            "deployment_namespace": "nginx",
                            "name": "nginx-db85cd1a",
                            "namespace": "nginx"
                        },
                        "rancher": {
                            "hostname": "rancher.local",
                            "ingress_enabled": true,
                            "namespace": "cattle-system",
                            "release_name": "rancher-0e744362",
                            "tls_source": "rancher"
                        }
                    },
                    "created": "2025-06-11T03:24:41.2283Z",
                    "modified": "2025-06-11T03:24:41.2283Z",
                    "sourcePosition": "project:///.venv/lib/python3.13/site-packages/pulumi/runtime/stack.py#140"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0",
                    "custom": true,
                    "id": "4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "type": "pulumi:providers:kubernetes",
                    "inputs": {
                        "__internal": {},
                        "version": "4.23.0"
                    },
                    "outputs": {
                        "version": "4.23.0"
                    },
                    "created": "2025-06-11T03:24:41.539269Z",
                    "modified": "2025-06-11T03:24:41.539269Z"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::nginx",
                    "custom": true,
                    "id": "nginx",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "name": "nginx"
                        }
                    },
                    "outputs": {
                        "__fieldManager": "pulumi-kubernetes-d5dcaf68",
                        "__initialApiVersion": "v1",
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "nginx"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2025-06-11T03:24:41Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "nginx"
                            },
                            "name": "nginx",
                            "resourceVersion": "486",
                            "uid": "8be7d6e7-9bd2-401a-90ac-2ddc12e0d1b8"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "apiVersion": [],
                        "kind": [],
                        "metadata": []
                    },
                    "additionalSecretOutputs": [
                        "metadata.name"
                    ],
                    "created": "2025-06-11T03:24:41.756096Z",
                    "modified": "2025-06-11T03:24:41.756096Z",
                    "sourcePosition": "project:///components/base_component.py#42"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::cattle-system",
                    "custom": true,
                    "id": "cattle-system",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "name": "cattle-system"
                        }
                    },
                    "outputs": {
                        "__fieldManager": "pulumi-kubernetes-b46c583b",
                        "__initialApiVersion": "v1",
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "cattle-system"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2025-06-11T03:24:41Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "cattle-system"
                            },
                            "name": "cattle-system",
                            "resourceVersion": "484",
                            "uid": "a54139cb-76e5-4fb6-89cc-f3826c02c582"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "apiVersion": [],
                        "kind": [],
                        "metadata": []
                    },
                    "additionalSecretOutputs": [
                        "metadata.name"
                    ],
                    "created": "2025-06-11T03:24:41.756076Z",
                    "modified": "2025-06-11T03:24:41.756076Z",
                    "sourcePosition": "project:///components/base_component.py#42"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::ingress-nginx",
                    "custom": true,
                    "id": "ingress-nginx",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "name": "ingress-nginx"
                        }
                    },
                    "outputs": {
                        "__fieldManager": "pulumi-kubernetes-00e03c0f",
                        "__initialApiVersion": "v1",
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "ingress-nginx"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2025-06-11T03:24:41Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "ingress-nginx"
                            },
                            "name": "ingress-nginx",
                            "resourceVersion": "485",
                            "uid": "aa5b977c-b084-4f62-947e-ba8ea3394bdb"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "apiVersion": [],
                        "kind": [],
                        "metadata": []
                    },
                    "additionalSecretOutputs": [
                        "metadata.name"
                    ],
                    "created": "2025-06-11T03:24:41.735141Z",
                    "modified": "2025-06-11T03:24:41.735141Z",
                    "sourcePosition": "project:///components/base_component.py#42"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::cert-manager",
                    "custom": true,
                    "id": "cert-manager",
                    "type": "kubernetes:core/v1:Namespace",
                    "inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "name": "cert-manager"
                        }
                    },
                    "outputs": {
                        "__fieldManager": "pulumi-kubernetes-a3fdbd80",
                        "__initialApiVersion": "v1",
                        "__inputs": {
                            "apiVersion": "v1",
                            "kind": "Namespace",
                            "metadata": {
                                "name": "cert-manager"
                            }
                        },
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "creationTimestamp": "2025-06-11T03:24:41Z",
                            "labels": {
                                "kubernetes.io/metadata.name": "cert-manager"
                            },
                            "name": "cert-manager",
                            "resourceVersion": "487",
                            "uid": "12a72c5e-ad5f-4363-952d-a4ee34d14eab"
                        },
                        "spec": {
                            "finalizers": [
                                "kubernetes"
                            ]
                        },
                        "status": {
                            "phase": "Active"
                        }
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "apiVersion": [],
                        "kind": [],
                        "metadata": []
                    },
                    "additionalSecretOutputs": [
                        "metadata.name"
                    ],
                    "created": "2025-06-11T03:24:41.738913Z",
                    "modified": "2025-06-11T03:24:41.738913Z",
                    "sourcePosition": "project:///components/base_component.py#42"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:helm.sh/v3:Release::cert-manager",
                    "custom": true,
                    "id": "cert-manager/cert-manager-058b9ad2",
                    "type": "kubernetes:helm.sh/v3:Release",
                    "inputs": {
                        "allowNullValues": false,
                        "atomic": false,
                        "chart": "cert-manager",
                        "cleanupOnFail": false,
                        "createNamespace": true,
                        "dependencyUpdate": false,
                        "description": "",
                        "devel": false,
                        "disableCRDHooks": false,
                        "disableOpenapiValidation": false,
                        "disableWebhooks": false,
                        "forceUpdate": false,
                        "keyring": "",
                        "lint": false,
                        "name": "cert-manager-058b9ad2",
                        "namespace": "cert-manager",
                        "postrender": "",
                        "recreatePods": false,
                        "renderSubchartNotes": false,
                        "replace": false,
                        "repositoryOpts": {
                            "caFile": "",
                            "certFile": "",
                            "keyFile": "",
                            "password": "",
                            "repo": "https://charts.jetstack.io",
                            "username": ""
                        },
                        "resetValues": false,
                        "reuseValues": false,
                        "skipAwait": false,
                        "skipCrds": false,
                        "timeout": 300,
                        "values": {
                            "installCRDs": true
                        },
                        "verify": false,
                        "version": "v1.17.2",
                        "waitForJobs": false
                    },
                    "outputs": {
                        "__inputs": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:Ut4dMvmUkTuckyIT:+mt7U0woYY8YazN+khGl3Kg0a7WEbCIgMrHNgq8zt2vyKZ45ki8+ss+uO6T/rFaYNoIGYsIJidYgIXGxrMCJvkHHb+OR2WOmBdmoJ4UADNc+DCU4ePZGqIjm4BMdpk0cHRg8Ps8u50rpii0dshrjOWLo3Wlr2HCfIrS/SQw+xGhQpKetkAUH8cT01+RLo1P9FtDxi5HoRiejCh5l5yghhI6EWzvl+Ji6X+55XtQdSzqCWRMRWO5h40lkSnsItrUg2nrz7CVTJ7mlfE5W4Q0BHm2ftwsJjOAx8scDqPD9A1eKAbazIgJVjESCdXan1u+vHT+qmpkCYY01+Tici+hM+fG8kh7Zi646qPxu23h+cjdL6fls/+t0JQWZ9gtWcWJXiXqYcyVEvNfYAoAQz1mMhN/PafLNi1kEp+nL3zsBC6PqjsFXOVTRxyv2A4Lg1h7h9OLhG/pUKZeFbsLeFAS3GLZpriPAKcr9yOoFKiIz32bdzXmuPZwmm9hLBtVrdnQH8RIYtmysan1Ic9nhEpyxUbnDQTtS8pybN32aJ4y+BcddL4Q9oNjMPqSTj57I6EmmS+7MqTGt3gTc6scCcrKXQCztuFzYEDHVPrLlCt7reFwHOqGbgIL9+rbVKhe5lb0RD6RtQ9YiRA4Qu1GV/4xByfDtrFekHFdex8bMZqz0wFN/ydErUhUgjJrNDLMJmr3jsjcmLEqzABSMqBfOjCov62POBokc4XOpC0J03mMwV3rTFNvr+rvz9SX+ijgBnd/5NB/+0p9euh2rpuEvSIo5h8f0s+jE/bk+CnxuPxb9JHzQH1OQa/+b+hdytOOnpTCAPvUW8NNTq5zCoNeo4drjlWPKElnSpYCHHJIm7DE7KGop9xGUJBB9vnw4OTq3C3L+/LQE6XKqtAaiEETToXfELtulLuWorx9gx/pD21zgwC5eT2luFVrKW3OAIkM7lM2VUoCJZPVrRowvyIXONa94RbfdcFoH+A=="
                        },
                        "allowNullValues": false,
                        "atomic": false,
                        "chart": "cert-manager",
                        "cleanupOnFail": false,
                        "createNamespace": true,
                        "dependencyUpdate": false,
                        "description": "",
                        "devel": false,
                        "disableCRDHooks": false,
                        "disableOpenapiValidation": false,
                        "disableWebhooks": false,
                        "forceUpdate": false,
                        "keyring": "",
                        "lint": false,
                        "name": "cert-manager-058b9ad2",
                        "namespace": "cert-manager",
                        "postrender": "",
                        "recreatePods": false,
                        "renderSubchartNotes": false,
                        "replace": false,
                        "repositoryOpts": {
                            "caFile": "",
                            "certFile": "",
                            "keyFile": "",
                            "password": "",
                            "repo": "https://charts.jetstack.io",
                            "username": ""
                        },
                        "resetValues": false,
                        "resourceNames": {
                            "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "cert-manager-058b9ad2-cainjector",
                                "cert-manager-058b9ad2-cluster-view",
                                "cert-manager-058b9ad2-controller-approve:cert-manager-io",
                                "cert-manager-058b9ad2-controller-certificates",
                                "cert-manager-058b9ad2-controller-certificatesigningrequests",
                                "cert-manager-058b9ad2-controller-challenges",
                                "cert-manager-058b9ad2-controller-clusterissuers",
                                "cert-manager-058b9ad2-controller-ingress-shim",
                                "cert-manager-058b9ad2-controller-issuers",
                                "cert-manager-058b9ad2-controller-orders",
                                "cert-manager-058b9ad2-edit",
                                "cert-manager-058b9ad2-view",
                                "cert-manager-058b9ad2-webhook:subjectaccessreviews"
                            ],
                            "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "cert-manager-058b9ad2-cainjector",
                                "cert-manager-058b9ad2-controller-approve:cert-manager-io",
                                "cert-manager-058b9ad2-controller-certificates",
                                "cert-manager-058b9ad2-controller-certificatesigningrequests",
                                "cert-manager-058b9ad2-controller-challenges",
                                "cert-manager-058b9ad2-controller-clusterissuers",
                                "cert-manager-058b9ad2-controller-ingress-shim",
                                "cert-manager-058b9ad2-controller-issuers",
                                "cert-manager-058b9ad2-controller-orders",
                                "cert-manager-058b9ad2-webhook:subjectaccessreviews"
                            ],
                            "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                                "certificaterequests.cert-manager.io",
                                "certificates.cert-manager.io",
                                "challenges.acme.cert-manager.io",
                                "clusterissuers.cert-manager.io",
                                "issuers.cert-manager.io",
                                "orders.acme.cert-manager.io"
                            ],
                            "Deployment.apps/apps/v1": [
                                "cert-manager/cert-manager-058b9ad2",
                                "cert-manager/cert-manager-058b9ad2-cainjector",
                                "cert-manager/cert-manager-058b9ad2-webhook"
                            ],
                            "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                                "cert-manager-058b9ad2-webhook"
                            ],
                            "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "cert-manager/cert-manager-058b9ad2-tokenrequest",
                                "cert-manager/cert-manager-058b9ad2-webhook:dynamic-serving",
                                "kube-system/cert-manager-058b9ad2-cainjector:leaderelection",
                                "kube-system/cert-manager-058b9ad2:leaderelection"
                            ],
                            "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "cert-manager/cert-manager-058b9ad2-cert-manager-058b9ad2-tokenrequest",
                                "cert-manager/cert-manager-058b9ad2-webhook:dynamic-serving",
                                "kube-system/cert-manager-058b9ad2-cainjector:leaderelection",
                                "kube-system/cert-manager-058b9ad2:leaderelection"
                            ],
                            "Service/v1": [
                                "cert-manager/cert-manager-058b9ad2",
                                "cert-manager/cert-manager-058b9ad2-cainjector",
                                "cert-manager/cert-manager-058b9ad2-webhook"
                            ],
                            "ServiceAccount/v1": [
                                "cert-manager/cert-manager-058b9ad2",
                                "cert-manager/cert-manager-058b9ad2-cainjector",
                                "cert-manager/cert-manager-058b9ad2-webhook"
                            ],
                            "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                                "cert-manager-058b9ad2-webhook"
                            ]
                        },
                        "reuseValues": false,
                        "skipAwait": false,
                        "skipCrds": false,
                        "status": {
                            "appVersion": "v1.17.2",
                            "chart": "cert-manager",
                            "name": "cert-manager-058b9ad2",
                            "namespace": "cert-manager",
                            "revision": 1,
                            "status": "deployed",
                            "version": "v1.17.2"
                        },
                        "timeout": 300,
                        "values": {
                            "installCRDs": true
                        },
                        "verify": false,
                        "version": "v1.17.2",
                        "waitForJobs": false
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "dependencies": [
                        "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::cert-manager"
                    ],
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "chart": [],
                        "compat": [],
                        "createNamespace": [],
                        "namespace": [
                            "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::cert-manager"
                        ],
                        "repositoryOpts": [],
                        "values": [],
                        "version": []
                    },
                    "created": "2025-06-11T03:25:13.087946Z",
                    "modified": "2025-06-11T03:25:13.087946Z",
                    "sourcePosition": "project:///components/cert_manager.py#43"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:apps/v1:Deployment::nginx",
                    "custom": true,
                    "id": "nginx/nginx-db85cd1a",
                    "type": "kubernetes:apps/v1:Deployment",
                    "inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "name": "nginx-db85cd1a",
                            "namespace": "nginx"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "nginx"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "app": "nginx"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "image": "nginx:latest",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/",
                                                    "port": 80
                                                },
                                                "initialDelaySeconds": 30,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "nginx",
                                            "ports": [
                                                {
                                                    "containerPort": 80
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/",
                                                    "port": 80
                                                },
                                                "initialDelaySeconds": 5,
                                                "timeoutSeconds": 5
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "200m",
                                                    "memory": "256Mi"
                                                },
                                                "requests": {
                                                    "cpu": "100m",
                                                    "memory": "128Mi"
                                                }
                                            }
                                        }
                                    ],
                                    "restartPolicy": "Always"
                                }
                            }
                        }
                    },
                    "outputs": {
                        "__fieldManager": "pulumi-kubernetes-d0edd4d0",
                        "__initialApiVersion": "apps/v1",
                        "__inputs": {
                            "apiVersion": "apps/v1",
                            "kind": "Deployment",
                            "metadata": {
                                "annotations": {
                                    "pulumi.com/autonamed": "true"
                                },
                                "name": "nginx-db85cd1a",
                                "namespace": "nginx"
                            },
                            "spec": {
                                "replicas": 1,
                                "selector": {
                                    "matchLabels": {
                                        "app": "nginx"
                                    }
                                },
                                "template": {
                                    "metadata": {
                                        "labels": {
                                            "app": "nginx"
                                        }
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "image": "nginx:latest",
                                                "livenessProbe": {
                                                    "httpGet": {
                                                        "path": "/",
                                                        "port": 80
                                                    },
                                                    "initialDelaySeconds": 30,
                                                    "timeoutSeconds": 5
                                                },
                                                "name": "nginx",
                                                "ports": [
                                                    {
                                                        "containerPort": 80
                                                    }
                                                ],
                                                "readinessProbe": {
                                                    "httpGet": {
                                                        "path": "/",
                                                        "port": 80
                                                    },
                                                    "initialDelaySeconds": 5,
                                                    "timeoutSeconds": 5
                                                },
                                                "resources": {
                                                    "limits": {
                                                        "cpu": "200m",
                                                        "memory": "256Mi"
                                                    },
                                                    "requests": {
                                                        "cpu": "100m",
                                                        "memory": "128Mi"
                                                    }
                                                }
                                            }
                                        ],
                                        "restartPolicy": "Always"
                                    }
                                }
                            }
                        },
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "deployment.kubernetes.io/revision": "1",
                                "pulumi.com/autonamed": "true"
                            },
                            "creationTimestamp": "2025-06-11T03:24:46Z",
                            "generation": 1,
                            "managedFields": [
                                {
                                    "apiVersion": "apps/v1",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                "f:pulumi.com/autonamed": {}
                                            }
                                        },
                                        "f:spec": {
                                            "f:replicas": {},
                                            "f:selector": {},
                                            "f:template": {
                                                "f:metadata": {
                                                    "f:labels": {
                                                        "f:app": {}
                                                    }
                                                },
                                                "f:spec": {
                                                    "f:containers": {
                                                        "k:{\"name\":\"nginx\"}": {
                                                            ".": {},
                                                            "f:image": {},
                                                            "f:livenessProbe": {
                                                                "f:httpGet": {
                                                                    "f:path": {},
                                                                    "f:port": {}
                                                                },
                                                                "f:initialDelaySeconds": {},
                                                                "f:timeoutSeconds": {}
                                                            },
                                                            "f:name": {},
                                                            "f:ports": {
                                                                "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                                    ".": {},
                                                                    "f:containerPort": {}
                                                                }
                                                            },
                                                            "f:readinessProbe": {
                                                                "f:httpGet": {
                                                                    "f:path": {},
                                                                    "f:port": {}
                                                                },
                                                                "f:initialDelaySeconds": {},
                                                                "f:timeoutSeconds": {}
                                                            },
                                                            "f:resources": {
                                                                "f:limits": {
                                                                    "f:cpu": {},
                                                                    "f:memory": {}
                                                                },
                                                                "f:requests": {
                                                                    "f:cpu": {},
                                                                    "f:memory": {}
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "f:restartPolicy": {}
                                                }
                                            }
                                        }
                                    },
                                    "manager": "pulumi-kubernetes-d0edd4d0",
                                    "operation": "Apply",
                                    "time": "2025-06-11T03:24:46Z"
                                },
                                {
                                    "apiVersion": "apps/v1",
                                    "fieldsType": "FieldsV1",
                                    "fieldsV1": {
                                        "f:metadata": {
                                            "f:annotations": {
                                                "f:deployment.kubernetes.io/revision": {}
                                            }
                                        },
                                        "f:status": {
                                            "f:availableReplicas": {},
                                            "f:conditions": {
                                                ".": {},
                                                "k:{\"type\":\"Available\"}": {
                                                    ".": {},
                                                    "f:lastTransitionTime": {},
                                                    "f:lastUpdateTime": {},
                                                    "f:message": {},
                                                    "f:reason": {},
                                                    "f:status": {},
                                                    "f:type": {}
                                                },
                                                "k:{\"type\":\"Progressing\"}": {
                                                    ".": {},
                                                    "f:lastTransitionTime": {},
                                                    "f:lastUpdateTime": {},
                                                    "f:message": {},
                                                    "f:reason": {},
                                                    "f:status": {},
                                                    "f:type": {}
                                                }
                                            },
                                            "f:observedGeneration": {},
                                            "f:readyReplicas": {},
                                            "f:replicas": {},
                                            "f:updatedReplicas": {}
                                        }
                                    },
                                    "manager": "k3s",
                                    "operation": "Update",
                                    "subresource": "status",
                                    "time": "2025-06-11T03:25:11Z"
                                }
                            ],
                            "name": "nginx-db85cd1a",
                            "namespace": "nginx",
                            "resourceVersion": "823",
                            "uid": "6c9acb63-9401-47b0-953d-8a4d0c0ac7ca"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 1,
                            "revisionHistoryLimit": 10,
                            "selector": {
                                "matchLabels": {
                                    "app": "nginx"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": "25%",
                                    "maxUnavailable": "25%"
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "app": "nginx"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "image": "nginx:latest",
                                            "imagePullPolicy": "Always",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/",
                                                    "port": 80,
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "nginx",
                                            "ports": [
                                                {
                                                    "containerPort": 80,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/",
                                                    "port": 80,
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 5,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 5
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "200m",
                                                    "memory": "256Mi"
                                                },
                                                "requests": {
                                                    "cpu": "100m",
                                                    "memory": "128Mi"
                                                }
                                            },
                                            "terminationMessagePath": "/dev/termination-log",
                                            "terminationMessagePolicy": "File"
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "restartPolicy": "Always",
                                    "schedulerName": "default-scheduler",
                                    "securityContext": {},
                                    "terminationGracePeriodSeconds": 30
                                }
                            }
                        },
                        "status": {
                            "availableReplicas": 1,
                            "conditions": [
                                {
                                    "lastTransitionTime": "2025-06-11T03:25:11Z",
                                    "lastUpdateTime": "2025-06-11T03:25:11Z",
                                    "message": "Deployment has minimum availability.",
                                    "reason": "MinimumReplicasAvailable",
                                    "status": "True",
                                    "type": "Available"
                                },
                                {
                                    "lastTransitionTime": "2025-06-11T03:24:46Z",
                                    "lastUpdateTime": "2025-06-11T03:25:11Z",
                                    "message": "ReplicaSet \"nginx-db85cd1a-59bf4f87c7\" has successfully progressed.",
                                    "reason": "NewReplicaSetAvailable",
                                    "status": "True",
                                    "type": "Progressing"
                                }
                            ],
                            "observedGeneration": 1,
                            "readyReplicas": 1,
                            "replicas": 1,
                            "updatedReplicas": 1
                        }
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "dependencies": [
                        "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::nginx"
                    ],
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "apiVersion": [],
                        "kind": [],
                        "metadata": [
                            "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::nginx"
                        ],
                        "spec": []
                    },
                    "created": "2025-06-11T03:25:11.222703Z",
                    "modified": "2025-06-11T03:25:11.222703Z",
                    "sourcePosition": "project:///components/nginx.py#37"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:helm.sh/v3:Release::ingress-nginx",
                    "custom": true,
                    "id": "ingress-nginx/ingress-nginx-c0b6f2c3",
                    "type": "kubernetes:helm.sh/v3:Release",
                    "inputs": {
                        "allowNullValues": false,
                        "atomic": false,
                        "chart": "ingress-nginx",
                        "cleanupOnFail": false,
                        "createNamespace": false,
                        "dependencyUpdate": false,
                        "description": "",
                        "devel": false,
                        "disableCRDHooks": false,
                        "disableOpenapiValidation": false,
                        "disableWebhooks": false,
                        "forceUpdate": false,
                        "keyring": "",
                        "lint": false,
                        "name": "ingress-nginx-c0b6f2c3",
                        "namespace": "ingress-nginx",
                        "postrender": "",
                        "recreatePods": false,
                        "renderSubchartNotes": false,
                        "replace": false,
                        "repositoryOpts": {
                            "caFile": "",
                            "certFile": "",
                            "keyFile": "",
                            "password": "",
                            "repo": "https://kubernetes.github.io/ingress-nginx",
                            "username": ""
                        },
                        "resetValues": false,
                        "reuseValues": false,
                        "skipAwait": false,
                        "skipCrds": false,
                        "timeout": 600,
                        "values": {
                            "controller": {
                                "admissionWebhooks": {
                                    "enabled": true,
                                    "patch": {
                                        "enabled": true,
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "100Mi"
                                            },
                                            "requests": {
                                                "cpu": "50m",
                                                "memory": "50Mi"
                                            }
                                        }
                                    }
                                },
                                "config": {
                                    "client-body-timeout": "60s",
                                    "client-header-timeout": "60s",
                                    "compute-full-forwarded-for": "true",
                                    "enable-real-ip": "true",
                                    "keep-alive": "75",
                                    "keep-alive-requests": "100",
                                    "proxy-body-size": "50m",
                                    "proxy-connect-timeout": "60s",
                                    "proxy-read-timeout": "60s",
                                    "proxy-send-timeout": "60s",
                                    "upstream-keepalive-connections": "100",
                                    "upstream-keepalive-timeout": "60",
                                    "use-forwarded-headers": "true",
                                    "use-proxy-protocol": "false"
                                },
                                "containerSecurityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsGroup": 101,
                                    "runAsNonRoot": true,
                                    "runAsUser": 101
                                },
                                "dnsPolicy": "ClusterFirstWithHostNet",
                                "extraArgs": {
                                    "default-ssl-certificate": "ingress-nginx/tls-secret"
                                },
                                "hostNetwork": true,
                                "hostPort": {
                                    "enabled": true,
                                    "ports": {
                                        "http": 80,
                                        "https": 443
                                    }
                                },
                                "image": {
                                    "allowPrivilegeEscalation": false
                                },
                                "kind": "DaemonSet",
                                "livenessProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "timeoutSeconds": 2
                                },
                                "metrics": {
                                    "enabled": false,
                                    "serviceMonitor": {
                                        "enabled": false
                                    }
                                },
                                "minReadySeconds": 0,
                                "name": "controller",
                                "nodeSelector": {
                                    "kubernetes.io/os": "linux"
                                },
                                "podSecurityContext": {
                                    "fsGroup": 101,
                                    "runAsGroup": 101,
                                    "runAsNonRoot": true,
                                    "runAsUser": 101
                                },
                                "readinessProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "256Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "90Mi"
                                    }
                                },
                                "service": {
                                    "enabled": true,
                                    "externalTrafficPolicy": "Local",
                                    "type": "NodePort"
                                },
                                "startupProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                },
                                "terminationGracePeriodSeconds": 30,
                                "tolerations": [
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/master",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/control-plane",
                                        "operator": "Exists"
                                    }
                                ],
                                "updateStrategy": {
                                    "rollingUpdate": {
                                        "maxUnavailable": 1
                                    },
                                    "type": "RollingUpdate"
                                }
                            },
                            "defaultBackend": {
                                "enabled": true,
                                "minReadySeconds": 0,
                                "replicaCount": 1,
                                "resources": {
                                    "limits": {
                                        "cpu": "20m",
                                        "memory": "40Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "startupProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                }
                            }
                        },
                        "verify": false,
                        "version": "4.9.1",
                        "waitForJobs": false
                    },
                    "outputs": {
                        "__inputs": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:fdoZfbMilobgqY/i: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"
                        },
                        "allowNullValues": false,
                        "atomic": false,
                        "chart": "ingress-nginx",
                        "cleanupOnFail": false,
                        "createNamespace": false,
                        "dependencyUpdate": false,
                        "description": "",
                        "devel": false,
                        "disableCRDHooks": false,
                        "disableOpenapiValidation": false,
                        "disableWebhooks": false,
                        "forceUpdate": false,
                        "keyring": "",
                        "lint": false,
                        "name": "ingress-nginx-c0b6f2c3",
                        "namespace": "ingress-nginx",
                        "postrender": "",
                        "recreatePods": false,
                        "renderSubchartNotes": false,
                        "replace": false,
                        "repositoryOpts": {
                            "caFile": "",
                            "certFile": "",
                            "keyFile": "",
                            "password": "",
                            "repo": "https://kubernetes.github.io/ingress-nginx",
                            "username": ""
                        },
                        "resetValues": false,
                        "resourceNames": {
                            "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "ingress-nginx-c0b6f2c3"
                            ],
                            "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "ingress-nginx-c0b6f2c3"
                            ],
                            "ConfigMap/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3-controller"
                            ],
                            "DaemonSet.apps/apps/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3-controller"
                            ],
                            "Deployment.apps/apps/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3-defaultbackend"
                            ],
                            "IngressClass.networking.k8s.io/networking.k8s.io/v1": [
                                "nginx"
                            ],
                            "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3"
                            ],
                            "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3"
                            ],
                            "Service/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3-controller",
                                "ingress-nginx/ingress-nginx-c0b6f2c3-controller-admission",
                                "ingress-nginx/ingress-nginx-c0b6f2c3-defaultbackend"
                            ],
                            "ServiceAccount/v1": [
                                "ingress-nginx/ingress-nginx-c0b6f2c3",
                                "ingress-nginx/ingress-nginx-c0b6f2c3-backend"
                            ],
                            "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                                "ingress-nginx-c0b6f2c3-admission"
                            ]
                        },
                        "reuseValues": false,
                        "skipAwait": false,
                        "skipCrds": false,
                        "status": {
                            "appVersion": "1.9.6",
                            "chart": "ingress-nginx",
                            "name": "ingress-nginx-c0b6f2c3",
                            "namespace": "ingress-nginx",
                            "revision": 3,
                            "status": "deployed",
                            "version": "4.9.1"
                        },
                        "timeout": 600,
                        "values": {
                            "controller": {
                                "admissionWebhooks": {
                                    "enabled": true,
                                    "patch": {
                                        "enabled": true,
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "100Mi"
                                            },
                                            "requests": {
                                                "cpu": "50m",
                                                "memory": "50Mi"
                                            }
                                        }
                                    }
                                },
                                "config": {
                                    "client-body-timeout": "60s",
                                    "client-header-timeout": "60s",
                                    "compute-full-forwarded-for": "true",
                                    "enable-real-ip": "true",
                                    "keep-alive": "75",
                                    "keep-alive-requests": "100",
                                    "proxy-body-size": "50m",
                                    "proxy-connect-timeout": "60s",
                                    "proxy-read-timeout": "60s",
                                    "proxy-send-timeout": "60s",
                                    "upstream-keepalive-connections": "100",
                                    "upstream-keepalive-timeout": "60",
                                    "use-forwarded-headers": "true",
                                    "use-proxy-protocol": "false"
                                },
                                "containerSecurityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsGroup": 101,
                                    "runAsNonRoot": true,
                                    "runAsUser": 101
                                },
                                "dnsPolicy": "ClusterFirstWithHostNet",
                                "extraArgs": {
                                    "default-ssl-certificate": "ingress-nginx/tls-secret"
                                },
                                "hostNetwork": true,
                                "hostPort": {
                                    "enabled": true,
                                    "ports": {
                                        "http": 80,
                                        "https": 443
                                    }
                                },
                                "image": {
                                    "allowPrivilegeEscalation": false
                                },
                                "kind": "DaemonSet",
                                "livenessProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "timeoutSeconds": 2
                                },
                                "metrics": {
                                    "enabled": false,
                                    "serviceMonitor": {
                                        "enabled": false
                                    }
                                },
                                "minReadySeconds": 0,
                                "name": "controller",
                                "nodeSelector": {
                                    "kubernetes.io/os": "linux"
                                },
                                "podSecurityContext": {
                                    "fsGroup": 101,
                                    "runAsGroup": 101,
                                    "runAsNonRoot": true,
                                    "runAsUser": 101
                                },
                                "readinessProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "256Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "90Mi"
                                    }
                                },
                                "service": {
                                    "enabled": true,
                                    "externalTrafficPolicy": "Local",
                                    "type": "NodePort"
                                },
                                "startupProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                },
                                "terminationGracePeriodSeconds": 30,
                                "tolerations": [
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/master",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/control-plane",
                                        "operator": "Exists"
                                    }
                                ],
                                "updateStrategy": {
                                    "rollingUpdate": {
                                        "maxUnavailable": 1
                                    },
                                    "type": "RollingUpdate"
                                }
                            },
                            "defaultBackend": {
                                "enabled": true,
                                "minReadySeconds": 0,
                                "replicaCount": 1,
                                "resources": {
                                    "limits": {
                                        "cpu": "20m",
                                        "memory": "40Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "startupProbe": {
                                    "enabled": true,
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                }
                            }
                        },
                        "verify": false,
                        "version": "4.9.1",
                        "waitForJobs": false
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "dependencies": [
                        "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::ingress-nginx"
                    ],
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "chart": [],
                        "compat": [],
                        "namespace": [
                            "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::ingress-nginx"
                        ],
                        "repositoryOpts": [],
                        "timeout": [],
                        "values": [],
                        "version": []
                    },
                    "customTimeouts": {
                        "create": 600,
                        "update": 600,
                        "delete": 300
                    },
                    "created": "2025-06-11T03:34:54.286696Z",
                    "modified": "2025-06-11T04:05:24.850562Z",
                    "sourcePosition": "project:///components/ingress.py#239"
                },
                {
                    "urn": "urn:pulumi:dev::quickstart::kubernetes:helm.sh/v3:Release::rancher",
                    "custom": true,
                    "id": "cattle-system/rancher-0e744362",
                    "type": "kubernetes:helm.sh/v3:Release",
                    "inputs": {
                        "allowNullValues": false,
                        "atomic": false,
                        "chart": "rancher",
                        "cleanupOnFail": false,
                        "createNamespace": false,
                        "dependencyUpdate": false,
                        "description": "",
                        "devel": false,
                        "disableCRDHooks": false,
                        "disableOpenapiValidation": false,
                        "disableWebhooks": false,
                        "forceUpdate": false,
                        "keyring": "",
                        "lint": false,
                        "name": "rancher-0e744362",
                        "namespace": "cattle-system",
                        "postrender": "",
                        "recreatePods": false,
                        "renderSubchartNotes": false,
                        "replace": false,
                        "repositoryOpts": {
                            "caFile": "",
                            "certFile": "",
                            "keyFile": "",
                            "password": "",
                            "repo": "https://releases.rancher.com/server-charts/stable",
                            "username": ""
                        },
                        "resetValues": false,
                        "reuseValues": false,
                        "skipAwait": false,
                        "skipCrds": false,
                        "timeout": 300,
                        "values": {
                            "bootstrapPassword": "admin123",
                            "hostname": "rancher.local",
                            "ingress": {
                                "enabled": true,
                                "extraAnnotations": {
                                    "cert-manager.io/cluster-issuer": "rancher-selfsigned",
                                    "kubernetes.io/ingress.class": "nginx"
                                },
                                "tls": {
                                    "source": "rancher"
                                }
                            },
                            "replicas": 1
                        },
                        "verify": false,
                        "version": "2.11.2",
                        "waitForJobs": false
                    },
                    "outputs": {
                        "__inputs": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:0yJ1kQ07WbMh2jiC:meF7jXEJ7hBCf/z1XKObBhCpibkoiRumUsf7UcIlepF/wwykbX/LpxGfyvoKRTsi04GuRDQKr/AmrvOgjr5sWgWTg2sdAGYsy+s4arpCq+Ou8TBrrIZxnr5hHypsT181xabvt//pIXAnlInh6cKrufXyRhVoW392tzTk0rExpLlK6wABBImRPGC/r2Uw/meV3glddcuTJ6LtGzequBktztB009HMl14PC5IU8jJ4fpEJn0oJYRuoIDkgTk1ZsLqgnPo/vid7rnDJrE9vRlkvQiywjCQIi9670YQeamAHOZkEpkuVqi4cqYR6B7+kkUMUwwsLwyZ/oe3m8zAxIwuuMNMRi/TFbNMYnEpfjWfQdhw2BrI+5hqyzzAuubA2KOhCFgGLQcsAIDFJhp7Jtlpz+uB2NFvZym+Jy7z/mWTwyKEj+Gt41PAx5FBro6M9iXCfxBXWI6qWM9BXYsHLzlg0vBSZX3gHwjvvvon2oPEVDvUZAHhlJ4Oj7aUhvtwXWrwH6i8O8ZpmJvX7gVQBYEVTCvSiRTbaITAoTmyX08X1g+liHPccg22FP5xkZLEiH7eT1Tfj8OvSjkFC82dbcHErBTUaCNxe9bWoMJckTkwGHSdgYTT5Xou2MOZJhRZjd56CZ3hcaQQI/5YGBqAuOS5XiykH1YWZPT3bRiR7e4pjA+U9wnYk2kxQLQKi6uYgMrQSlGF1uTljO+J5xSrjpt0wc61pRrqgR4vVW8p70R5+ozgDBKmCHt78+SVpUvbomUvrgnpqftds8RPjftfpYBZ4c5+ACkMJlHUXcWSeqfjd6JXxCEs1PsccyaQlrOOFGfyAaIUZjFEuxGdtZTesYR2kmjmVKsY1yKe0k9NkfIuDebv+LEIjkJwcx/jyioSS4JIyIFoQLywZEtIbmxppYtsdIVkPr15di96M5+yqzgWhtjSLk8bOUX2fyjzaM7uE+pq1TSGMCRouaIHHqmJwEkIhlLtqCFc2MdoipPWrwAnbN8S32mWktRikcSKbIinVegKtC5V6RXCX3AJ+SeAANnMr9XogtZJFQIyY6Jf5s1AOyHSV6Jp8WeuptYCXxQm7L/YEyn1meVMgSGLjeVR4YuPgkXvwbCNXTE7iuKzLWvCi/p5t6JdPIMoRPxP/OLXfyvDmfSPCvggU/pYhSxYkMuEu6moZbHzweYt77gkl3tu1wG6sw4joGCPcrP13f/2B3qHvl1Vr8ygskD9/UeopSHsJLcjvGLC7k0/Kye4r80zBnjA6pWUnOWvHEDzY/agZKszBH9cDtRNmWQbUmfu/tQcS"
                        },
                        "allowNullValues": false,
                        "atomic": false,
                        "chart": "rancher",
                        "cleanupOnFail": false,
                        "createNamespace": false,
                        "dependencyUpdate": false,
                        "description": "",
                        "devel": false,
                        "disableCRDHooks": false,
                        "disableOpenapiValidation": false,
                        "disableWebhooks": false,
                        "forceUpdate": false,
                        "keyring": "",
                        "lint": false,
                        "name": "rancher-0e744362",
                        "namespace": "cattle-system",
                        "postrender": "",
                        "recreatePods": false,
                        "renderSubchartNotes": false,
                        "replace": false,
                        "repositoryOpts": {
                            "caFile": "",
                            "certFile": "",
                            "keyFile": "",
                            "password": "",
                            "repo": "https://releases.rancher.com/server-charts/stable",
                            "username": ""
                        },
                        "resetValues": false,
                        "resourceNames": {
                            "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                                "rancher-0e744362"
                            ],
                            "ConfigMap/v1": [
                                "rancher-config"
                            ],
                            "Deployment.apps/apps/v1": [
                                "rancher-0e744362"
                            ],
                            "Ingress.networking.k8s.io/networking.k8s.io/v1": [
                                "rancher-0e744362"
                            ],
                            "Issuer.cert-manager.io/cert-manager.io/v1": [
                                "rancher-0e744362"
                            ],
                            "PriorityClass.scheduling.k8s.io/scheduling.k8s.io/v1": [
                                "rancher-critical"
                            ],
                            "Service/v1": [
                                "rancher-0e744362"
                            ],
                            "ServiceAccount/v1": [
                                "rancher-0e744362"
                            ]
                        },
                        "reuseValues": false,
                        "skipAwait": false,
                        "skipCrds": false,
                        "status": {
                            "appVersion": "v2.11.2",
                            "chart": "rancher",
                            "name": "rancher-0e744362",
                            "namespace": "cattle-system",
                            "revision": 1,
                            "status": "deployed",
                            "version": "2.11.2"
                        },
                        "timeout": 300,
                        "values": {
                            "bootstrapPassword": "admin123",
                            "hostname": "rancher.local",
                            "ingress": {
                                "enabled": true,
                                "extraAnnotations": {
                                    "cert-manager.io/cluster-issuer": "rancher-selfsigned",
                                    "kubernetes.io/ingress.class": "nginx"
                                },
                                "tls": {
                                    "source": "rancher"
                                }
                            },
                            "replicas": 1
                        },
                        "verify": false,
                        "version": "2.11.2",
                        "waitForJobs": false
                    },
                    "parent": "urn:pulumi:dev::quickstart::pulumi:pulumi:Stack::quickstart-dev",
                    "dependencies": [
                        "urn:pulumi:dev::quickstart::kubernetes:helm.sh/v3:Release::ingress-nginx",
                        "urn:pulumi:dev::quickstart::kubernetes:helm.sh/v3:Release::cert-manager",
                        "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::cattle-system"
                    ],
                    "provider": "urn:pulumi:dev::quickstart::pulumi:providers:kubernetes::default_4_23_0::4c85838f-3d19-4fe0-8c6e-669310d9ae9d",
                    "propertyDependencies": {
                        "chart": [],
                        "compat": [],
                        "namespace": [
                            "urn:pulumi:dev::quickstart::kubernetes:core/v1:Namespace::cattle-system"
                        ],
                        "repositoryOpts": [],
                        "values": [],
                        "version": []
                    },
                    "created": "2025-06-11T03:52:10.643497Z",
                    "modified": "2025-06-11T03:52:10.643497Z",
                    "sourcePosition": "project:///components/rancher.py#103"
                }
            ],
            "metadata": {}
        }
    }
}
